// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonDictionaryModel.Persistence;

namespace PersonDictionaryModel.Persistence.Migrations
{
    [DbContext(typeof(PersonDictionaryModelContext))]
    partial class PersonDictionaryModelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("PersonDictionaryModel.Core.Domain.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "London"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Budapest"
                        },
                        new
                        {
                            Id = 3,
                            Name = "California"
                        });
                });

            modelBuilder.Entity("PersonDictionaryModel.Core.Domain.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersonalNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2000, 10, 15, 2, 2, 31, 3, DateTimeKind.Local).AddTicks(7183),
                            CityId = 1,
                            FirstName = "John",
                            Gender = 0,
                            LastName = "Doe",
                            PersonalNumber = "xU7u4nqmeAN"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2006, 10, 15, 2, 2, 31, 4, DateTimeKind.Local).AddTicks(3723),
                            CityId = 2,
                            FirstName = "Ella",
                            Gender = 1,
                            LastName = "Doe",
                            PersonalNumber = "6TZ5UwQw5Rt"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1989, 10, 15, 2, 2, 31, 4, DateTimeKind.Local).AddTicks(3744),
                            CityId = 3,
                            FirstName = "Marta",
                            Gender = 1,
                            LastName = "Bella",
                            PersonalNumber = "cpNb9xJNR8g"
                        });
                });

            modelBuilder.Entity("PersonDictionaryModel.Core.Domain.Models.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("PhoneNumbers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = "055",
                            PersonId = 1,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Number = "051",
                            PersonId = 1,
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            Number = "077",
                            PersonId = 2,
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            Number = "050",
                            PersonId = 3,
                            Type = 0
                        });
                });

            modelBuilder.Entity("PersonDictionaryModel.Core.Domain.Models.RelatedPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("RelativeType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("RelatedPeople");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PersonId = 1,
                            RelativeType = 0
                        },
                        new
                        {
                            Id = 2,
                            PersonId = 1,
                            RelativeType = 2
                        },
                        new
                        {
                            Id = 3,
                            PersonId = 2,
                            RelativeType = 3
                        },
                        new
                        {
                            Id = 4,
                            PersonId = 3,
                            RelativeType = 2
                        });
                });

            modelBuilder.Entity("PersonDictionaryModel.Core.Domain.Models.Person", b =>
                {
                    b.HasOne("PersonDictionaryModel.Core.Domain.Models.City", "City")
                        .WithMany("People")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("PersonDictionaryModel.Core.Domain.Models.PhoneNumber", b =>
                {
                    b.HasOne("PersonDictionaryModel.Core.Domain.Models.Person", "Person")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("PersonDictionaryModel.Core.Domain.Models.RelatedPerson", b =>
                {
                    b.HasOne("PersonDictionaryModel.Core.Domain.Models.Person", "Person")
                        .WithMany("RelatedPeople")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("PersonDictionaryModel.Core.Domain.Models.City", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("PersonDictionaryModel.Core.Domain.Models.Person", b =>
                {
                    b.Navigation("PhoneNumbers");

                    b.Navigation("RelatedPeople");
                });
#pragma warning restore 612, 618
        }
    }
}
